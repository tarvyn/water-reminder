{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"@nestjs/common\"","webpack:///external \"class-validator\"","webpack:///./libs/utils/src/index.ts","webpack:///external \"mongoose\"","webpack:///./apps/api/src/modules/config/config.service.ts","webpack:///external \"date-fns\"","webpack:///external \"express\"","webpack:///./apps/api/src/modules/user/user.service.ts","webpack:///external \"@nestjs/mongoose\"","webpack:///./apps/api/src/modules/shared/collections/index.ts","webpack:///external \"jsonwebtoken\"","webpack:///./apps/api/src/modules/reminder/reminder.model.ts","webpack:///./apps/api/src/modules/auth/auth.guard.ts","webpack:///./libs/api-interfaces/src/index.ts","webpack:///./apps/api/src/modules/hydration/hydration.service.ts","webpack:///./apps/api/src/modules/notification/notification.service.ts","webpack:///external \"date-fns-tz\"","webpack:///./apps/api/src/modules/shared/utils/date-fns.ts","webpack:///./apps/api/src/modules/user/user.module.ts","webpack:///./apps/api/src/modules/auth/auth.model.ts","webpack:///./apps/api/src/modules/auth/auth.service.ts","webpack:///./apps/api/src/modules/reminder/reminder.service.ts","webpack:///./apps/api/src/modules/config/config.module.ts","webpack:///./apps/api/src/environments/environment.prod.ts","webpack:///external \"@nestjs/passport\"","webpack:///./apps/api/src/modules/user/user.model.ts","webpack:///./apps/api/src/modules/auth/auth-validate.model.ts","webpack:///./apps/api/src/modules/hydration/time-range.model.ts","webpack:///external \"path\"","webpack:///external \"bcryptjs\"","webpack:///./apps/api/src/modules/hydration/hydration.module.ts","webpack:///./apps/api/src/modules/notification/notification.module.ts","webpack:///./apps/api/src/modules/hydration/dose.model.ts","webpack:///./apps/api/src/modules/notification/notification.model.ts","webpack:///./libs/utils/src/lib/utils.ts","webpack:///./libs/api-interfaces/src/lib/api-interfaces.ts","webpack:///./apps/api/src/modules/app.module.ts","webpack:///./apps/api/src/modules/shared/utils/root-path.ts","webpack:///external \"dotenv\"","webpack:///external \"fs\"","webpack:///./apps/api/src/modules/auth/auth.module.ts","webpack:///./apps/api/src/modules/user/user.controller.ts","webpack:///./apps/api/src/modules/shared/utils/verify-jwt.ts","webpack:///./apps/api/src/modules/user/user.schema.ts","webpack:///./apps/api/src/modules/auth/auth-google-strategy.ts","webpack:///external \"passport-google-oauth20\"","webpack:///./apps/api/src/modules/auth/auth.controller.ts","webpack:///./apps/api/src/modules/hydration/dose.schema.ts","webpack:///./apps/api/src/modules/hydration/hydration-controller.ts","webpack:///./apps/api/src/modules/notification/notification.controller.ts","webpack:///external \"web-push\"","webpack:///./apps/api/src/modules/notification/notification.schema.ts","webpack:///./apps/api/src/modules/reminder/reminder.module.ts","webpack:///./apps/api/src/modules/reminder/reminder-controller.ts","webpack:///external \"@nestjs/core\"","webpack:///external \"cookie-parser\"","webpack:///./apps/api/src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 57);\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"class-validator\");","export * from './lib/utils';\r\n","module.exports = require(\"mongoose\");","import { environment } from '@api/environments/environment';\r\nimport { rootPath } from '../shared/utils/root-path';\r\nimport { Injectable } from '@nestjs/common';\r\nimport * as dotenv from 'dotenv';\r\nimport * as fs from 'fs';\r\n\r\ntype EnvironmentKey =\r\n  'jwtSecretKey'\r\n  | 'googleClientId'\r\n  | 'googleClientSecret'\r\n  | 'mongodbConnectionString'\r\n  | 'vapidPrivateKey'\r\n  | 'clientHost'\r\n  | 'clientPort'\r\n  | 'apiHost'\r\n  | 'PORT';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n  public readonly envConfig: Record<EnvironmentKey, string>;\r\n\r\n  constructor() {\r\n    const filePath = `${rootPath}/apps/api/development.env`;\r\n\r\n    this.envConfig = environment.production\r\n      ? process.env as Record<EnvironmentKey, string>\r\n      : dotenv.parse(fs.readFileSync(filePath)) as Record<EnvironmentKey, string>;\r\n  }\r\n\r\n  get(key: EnvironmentKey): string {\r\n    return this.envConfig[key];\r\n  }\r\n}\r\n","module.exports = require(\"date-fns\");","module.exports = require(\"express\");","import { BadRequestException, Injectable, InternalServerErrorException } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport { UserDto, UserSignUpDto } from '@water-reminder/api-interfaces';\r\nimport { catchPromiseError } from '@water-reminder/utils';\r\nimport { hash } from 'bcryptjs';\r\nimport { Model } from 'mongoose';\r\nimport { Profile } from 'passport-google-oauth20';\r\nimport { PASSWORD_HASH_COMPLEXITY, SocialProvider } from '../auth/auth.model';\r\nimport { SchemaCollection } from '../shared/collections';\r\nimport { PushSubscriptionData } from './user.model';\r\nimport { UserDocument } from './user.schema';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(\r\n    @InjectModel(SchemaCollection.User)\r\n    private readonly userModel: Model<UserDocument>\r\n  ) {}\r\n\r\n  async find(): Promise<Array<UserDocument>> {\r\n    return this.userModel.find();\r\n  }\r\n\r\n  async findById(id: string): Promise<UserDocument> {\r\n    return this.userModel.findById(id);\r\n  }\r\n\r\n  async findByEmail(email: UserDto['email']): Promise<UserDocument> {\r\n    return this.userModel.findOne({ email });\r\n  }\r\n\r\n  async findOrCreate(\r\n    profile: Profile,\r\n    provider: SocialProvider\r\n  ): Promise<UserDocument> {\r\n    const {\r\n      id: thirdPartyId, photos,\r\n      name: { familyName, givenName },\r\n      emails: [{ value: email }]\r\n    } = profile;\r\n    const [photo] = photos || [];\r\n    const user = {\r\n      email,\r\n      provider,\r\n      thirdPartyId,\r\n      imageUrl: photo?.value,\r\n      firstName: familyName,\r\n      lastName: givenName\r\n    };\r\n    const [findUserError, existingUser] = await catchPromiseError(\r\n      this.userModel.findOne({ email })\r\n    );\r\n\r\n    if (findUserError) {\r\n      throw new InternalServerErrorException(\r\n        'Error when searching user has occurred.'\r\n      );\r\n    }\r\n\r\n    if (existingUser) {\r\n      return existingUser;\r\n    }\r\n\r\n    const [createUserError, [createdUser]] = await catchPromiseError(\r\n      this.userModel.create([user])\r\n    );\r\n\r\n    if (createUserError) {\r\n      throw new InternalServerErrorException(\r\n        'Error when creating user has occurred.'\r\n      );\r\n    }\r\n\r\n    return createdUser;\r\n  }\r\n\r\n  async create(userSignUpData: UserSignUpDto): Promise<UserDocument> {\r\n    const hashedPassword = await hash(\r\n      userSignUpData.password,\r\n      PASSWORD_HASH_COMPLEXITY\r\n    );\r\n    const [error, [user]] = await catchPromiseError(\r\n      this.userModel.create([\r\n        {\r\n          ...userSignUpData,\r\n          password: hashedPassword\r\n        }\r\n      ])\r\n    );\r\n\r\n    if (error) {\r\n      throw error;\r\n    }\r\n\r\n    return user;\r\n  }\r\n\r\n  async update(\r\n    id: string,\r\n    userData: Partial<UserDto>\r\n  ): Promise<UserDocument> {\r\n    const [error, user] = await catchPromiseError(\r\n      this.userModel.findByIdAndUpdate(id, userData)\r\n    );\r\n\r\n    if (error) {\r\n      throw new BadRequestException('User was not found');\r\n    }\r\n\r\n    return user;\r\n  }\r\n\r\n  async updatePushSubscription(\r\n    id: string,\r\n    pushSubscription: PushSubscriptionData\r\n  ): Promise<UserDocument> {\r\n    const [findByIdAndUpdateError, user] = await catchPromiseError(\r\n      this.userModel.findByIdAndUpdate(id, {\r\n        pushSubscriptions: [pushSubscription]\r\n      })\r\n    );\r\n\r\n    if (findByIdAndUpdateError) {\r\n      throw new BadRequestException('User was not found');\r\n    }\r\n\r\n    return user;\r\n  }\r\n}\r\n","module.exports = require(\"@nestjs/mongoose\");","export enum SchemaCollection {\r\n  User = 'User',\r\n  Dose = 'Dose',\r\n  Notification = 'Notification'\r\n}\r\n","module.exports = require(\"jsonwebtoken\");","import { DoseVolume, UserDto } from '@water-reminder/api-interfaces';\r\nimport { getNow, getTimeZone } from '@water-reminder/utils';\r\nimport {\r\n  addMilliseconds,\r\n  addMinutes,\r\n  differenceInMilliseconds,\r\n  getHours,\r\n  getMinutes,\r\n  startOfDay\r\n} from 'date-fns';\r\nimport { utcToZonedTime, zonedTimeToUtc } from 'date-fns-tz';\r\nimport {\r\n  getMillisecondsInHour,\r\n  startOfHalfOfHour\r\n} from '../shared/utils/date-fns';\r\n\r\n// TODO: remove constant and store this data for each user\r\nconst DAILY_TARGET = 2000;\r\n\r\nexport function getZonedToUtcTime(hours: number, timeZone: string): Date {\r\n  return zonedTimeToUtc(addMinutes(startOfDay(getNow()), hours * 60), timeZone);\r\n}\r\n\r\nexport function getUtcToZonedTime(date: Date, timeZone: string): Date {\r\n  return zonedTimeToUtc(\r\n    utcToZonedTime(date, timeZone),\r\n    getTimeZone()\r\n  );\r\n}\r\n\r\nexport function calculateRemainingHours(\r\n  user: UserDto,\r\n  now: Date = getNow()\r\n): number {\r\n  const utcToZonedNow = zonedTimeToUtc(\r\n    utcToZonedTime(now, user.timeZone),\r\n    getTimeZone()\r\n  );\r\n\r\n  return (\r\n    user.sleepTime - getHours(utcToZonedNow) - getMinutes(utcToZonedNow) / 60\r\n  );\r\n}\r\n\r\nexport function calculateRemainingDrinks(drunkWaterAmount: number): number {\r\n  const remainingWaterAmount = Math.max(0, DAILY_TARGET - drunkWaterAmount);\r\n\r\n  return Math.round(remainingWaterAmount / DoseVolume.cup);\r\n}\r\n\r\nexport function calculateNextDrinkTime(\r\n  lastDrinkTime: Date,\r\n  remainingHours: number,\r\n  remainingDrinks: number\r\n): Date {\r\n  const hoursPerDrink =\r\n    remainingDrinks > 0 ? Math.max(1, remainingHours / remainingDrinks) : 0;\r\n  const roundedHoursPerDrink = Math.max(1, Math.ceil(hoursPerDrink * 2) / 2);\r\n  const halfOfHourGap =\r\n    differenceInMilliseconds(lastDrinkTime, startOfHalfOfHour(lastDrinkTime)) /\r\n    getMillisecondsInHour();\r\n  const closestDrinkTimeSpan = roundedHoursPerDrink - halfOfHourGap;\r\n  const nextDrinkTimeSpan =\r\n    closestDrinkTimeSpan >= 1\r\n      ? closestDrinkTimeSpan\r\n      : closestDrinkTimeSpan + 0.5;\r\n\r\n  return addMilliseconds(\r\n    lastDrinkTime,\r\n    nextDrinkTimeSpan * getMillisecondsInHour()\r\n  );\r\n}\r\n","import { ConfigService } from '../config/config.service';\r\nimport { verifyJWT } from '../shared/utils/verify-jwt';\r\nimport { Injectable, CanActivate, ExecutionContext, UnauthorizedException } from '@nestjs/common';\r\nimport { Request } from 'express';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private config: ConfigService) {}\r\n\r\n  async canActivate(context: ExecutionContext): Promise<boolean> {\r\n    const request = context.switchToHttp().getRequest<Request>();\r\n    const { jwt } = request.cookies;\r\n\r\n    if (!jwt) {\r\n      throw new UnauthorizedException();\r\n    }\r\n\r\n    const jwtVerified = await verifyJWT(jwt, this.config.get('jwtSecretKey'));\r\n\r\n    if (!jwtVerified) {\r\n      throw new UnauthorizedException();\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","export * from './lib/api-interfaces';\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport {\r\n  DailyHydrationStatisticsDto,\r\n  DoseDto\r\n} from '@water-reminder/api-interfaces';\r\nimport { eachDayOfInterval, parseISO, startOfDay } from 'date-fns';\r\nimport { utcToZonedTime, zonedTimeToUtc } from 'date-fns-tz';\r\nimport { Model } from 'mongoose';\r\nimport { getUtcToZonedTime } from '../reminder/reminder.model';\r\nimport { SchemaCollection } from '../shared/collections';\r\nimport { UserService } from '../user/user.service';\r\nimport { CreateDose } from './dose.model';\r\nimport { DoseDocument } from './dose.schema';\r\nimport { TimeRange } from './time-range.model';\r\n\r\n@Injectable()\r\nexport class HydrationService {\r\n  constructor(\r\n    @InjectModel(SchemaCollection.Dose)\r\n    private readonly doseModel: Model<DoseDocument>,\r\n    private readonly userService: UserService\r\n  ) {}\r\n\r\n  async find(\r\n    userId: string,\r\n    timeRange?: TimeRange\r\n  ): Promise<Array<DoseDocument>> {\r\n    return this.doseModel.find({\r\n      userId,\r\n      ...(timeRange\r\n        ? {\r\n            time: {\r\n              $gte: timeRange.from,\r\n              ...(timeRange.to ? { $lt: timeRange.to } : {})\r\n            }\r\n          }\r\n        : {})\r\n    });\r\n  }\r\n\r\n  async getStatistics(\r\n    userId: string,\r\n    timeRange: TimeRange\r\n  ): Promise<Array<DailyHydrationStatisticsDto>> {\r\n    const { timeZone } = await this.userService.findById(userId);\r\n    const monthAccumulator = new Map(\r\n      eachDayOfInterval({\r\n        start: getUtcToZonedTime(parseISO(timeRange.from), timeZone),\r\n        end: getUtcToZonedTime(parseISO(timeRange.to), timeZone)\r\n      }).map(date => [zonedTimeToUtc(date, timeZone).toISOString(), 0])\r\n    );\r\n\r\n    const doses = await this.find(userId, timeRange);\r\n\r\n    for (const dose of doses) {\r\n      const time = zonedTimeToUtc(startOfDay(dose.time), timeZone);\r\n\r\n      monthAccumulator.set(\r\n        time.toISOString(),\r\n        monthAccumulator.get(time.toISOString()) + dose.volume\r\n      );\r\n    }\r\n\r\n    return Array.from(monthAccumulator.entries()).map(([date, amount]) => ({\r\n      date: parseISO(date),\r\n      amount\r\n    }));\r\n  }\r\n\r\n  async createDose(dose: CreateDose): Promise<DoseDto> {\r\n    const createdDose = await this.doseModel.create(dose);\r\n\r\n    return createdDose.toJSON();\r\n  }\r\n\r\n  async deleteDose(id: string): Promise<void> {\r\n    await this.doseModel.findByIdAndDelete(id);\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { InjectModel } from '@nestjs/mongoose';\r\nimport {\r\n  DoseDto,\r\n  NotificationPayloadDto,\r\n  NotificationStatus,\r\n  vapidPublicKey\r\n} from '@water-reminder/api-interfaces';\r\nimport { catchPromiseError } from '@water-reminder/utils';\r\nimport { Model } from 'mongoose';\r\nimport * as webPush from 'web-push';\r\nimport { ConfigService } from '../config/config.service';\r\nimport { SchemaCollection } from '../shared/collections';\r\nimport { User } from '../user/user.model';\r\nimport {\r\n  CreateNotification,\r\n  UpdateNotificationData\r\n} from './notification.model';\r\nimport { NotificationDocument } from './notification.schema';\r\n\r\n@Injectable()\r\nexport class NotificationService {\r\n  constructor(\r\n    @InjectModel(SchemaCollection.Notification)\r\n    private readonly notificationDocumentModel: Model<NotificationDocument>,\r\n    private readonly config: ConfigService\r\n  ) {}\r\n\r\n  async findLast(userId: string): Promise<NotificationDocument> {\r\n    return this.notificationDocumentModel.findOne(\r\n      { userId },\r\n      {},\r\n      { sort: { updatedAt: -1 } }\r\n    );\r\n  }\r\n\r\n  async update(\r\n    id: string,\r\n    updateData: UpdateNotificationData\r\n  ): Promise<NotificationDocument> {\r\n    return this.notificationDocumentModel.findByIdAndUpdate(id, updateData);\r\n  }\r\n\r\n  async create(notification: CreateNotification): Promise<DoseDto> {\r\n    const createdNotification = await this.notificationDocumentModel.create(\r\n      notification\r\n    );\r\n\r\n    return createdNotification.toJSON();\r\n  }\r\n\r\n  async notify(user: User, message: string): Promise<void> {\r\n    const { _id: userId, pushSubscriptions, email } = user;\r\n    const [pushSubscription] = pushSubscriptions;\r\n\r\n    if (!pushSubscription) {\r\n      console.log('subscription was not found for user', email);\r\n\r\n      return;\r\n    }\r\n\r\n    const notification = await this.create({\r\n      userId,\r\n      message,\r\n      status: NotificationStatus.untouched\r\n    });\r\n\r\n    const payload: NotificationPayloadDto = {\r\n      message,\r\n      notificationId: notification._id\r\n    };\r\n\r\n    const [error, sendNotificationResult] = await catchPromiseError(\r\n      webPush.sendNotification(pushSubscription, JSON.stringify(payload), {\r\n        vapidDetails: {\r\n          privateKey: this.config.get('vapidPrivateKey'),\r\n          publicKey: vapidPublicKey,\r\n          subject: 'mailto:tar.vynnychuk@gmail.com'\r\n        }\r\n      })\r\n    );\r\n\r\n    if (!error) {\r\n      console.log('error when sending push notification occurred', error);\r\n\r\n      return;\r\n    }\r\n\r\n    console.log('send notification result', sendNotificationResult);\r\n  }\r\n}\r\n","module.exports = require(\"date-fns-tz\");","import { addHours, addMilliseconds, differenceInHours, endOfHour, startOfHour, differenceInMinutes, addMinutes } from 'date-fns';\r\n\r\nexport function getMillisecondsInHour(): number {\r\n  return 1000 * 60 * 60;\r\n}\r\n\r\nexport function startOfHalfOfHour(time: Date): Date {\r\n  return differenceInMinutes(endOfHour(time), time) > 30\r\n    ? startOfHour(time)\r\n    : addMinutes(startOfHour(time), 30);\r\n}\r\n\r\nexport function endOfHalfOfHour(time: Date): Date {\r\n  return addMilliseconds(startOfHalfOfHour(time), getMillisecondsInHour() / 2);\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { ConfigModule } from '../config/config.module';\r\nimport { UserController } from './user.controller';\r\nimport { UserSchemaModel } from './user.schema';\r\nimport { UserService } from './user.service';\r\n\r\n@Module({\r\n  imports: [ConfigModule, MongooseModule.forFeature([UserSchemaModel])],\r\n  controllers: [UserController],\r\n  providers: [UserService],\r\n  exports: [UserService]\r\n})\r\nexport class UserModule {}\r\n","export enum SocialProvider {\r\n  google = 'google'\r\n}\r\n\r\nexport interface JWTPayload {\r\n  readonly id: string;\r\n}\r\n\r\nexport interface GoogleAuthUserPayload {\r\n  readonly id: string;\r\n}\r\n\r\nexport const JWT_COOKIE_NAME = 'jwt';\r\nexport const JWT_COOKIE_MAX_AGE = 7 * 24 * 60 * 60 * 1000;\r\nexport const PASSWORD_HASH_COMPLEXITY = 12;\r\n","import { JWT_COOKIE_MAX_AGE, JWT_COOKIE_NAME, JWTPayload } from './auth.model';\r\nimport { ConfigService } from '../config/config.service';\r\nimport { Injectable, InternalServerErrorException } from '@nestjs/common';\r\nimport { Response } from 'express';\r\nimport { sign } from 'jsonwebtoken';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(\r\n    private config: ConfigService,\r\n  ) {}\r\n\r\n  async setAuthorizationCookie(response: Response, payload: JWTPayload): Promise<void> {\r\n    const jwt = await this.generateJWT(payload);\r\n\r\n    response.cookie(JWT_COOKIE_NAME, jwt, { httpOnly: true, maxAge: JWT_COOKIE_MAX_AGE });\r\n  }\r\n\r\n  clearAuthorizationCookie(response: Response): void {\r\n    response.clearCookie(JWT_COOKIE_NAME);\r\n  }\r\n\r\n  private generateJWT(payload: JWTPayload): string {\r\n    try {\r\n      return sign(payload, this.config.get('jwtSecretKey'));\r\n    } catch (err) {\r\n      throw new InternalServerErrorException('Error when generating JWT token has occurred: ', err.message);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@nestjs/common';\r\nimport { getNow } from '@water-reminder/utils';\r\nimport {\r\n  addDays,\r\n  differenceInMilliseconds,\r\n  endOfHour,\r\n  isAfter,\r\n  isBefore,\r\n  isEqual\r\n} from 'date-fns';\r\nimport { HydrationService } from '../hydration/hydration.service';\r\nimport { NotificationService } from '../notification/notification.service';\r\nimport {\r\n  endOfHalfOfHour, getMillisecondsInHour,\r\n  startOfHalfOfHour\r\n} from '../shared/utils/date-fns';\r\nimport { UserService } from '../user/user.service';\r\nimport {\r\n  calculateNextDrinkTime,\r\n  calculateRemainingDrinks,\r\n  calculateRemainingHours,\r\n  getZonedToUtcTime,\r\n} from './reminder.model';\r\n\r\nexport const REMIND_TIME_INTERVAL = getMillisecondsInHour() / 2;\r\nexport const REPEAT_REMIND_TIME_DURATION_DUE_TO_INACTIVITY =\r\n  getMillisecondsInHour() * 4;\r\nexport const REMIND_MESSAGE = 'Time to drink water';\r\n\r\n@Injectable()\r\nexport class ReminderService {\r\n  constructor(\r\n    private readonly userService: UserService,\r\n    private readonly notificationService: NotificationService,\r\n    private readonly hydrationService: HydrationService\r\n  ) {}\r\n\r\n  runReminder(): void {\r\n    const now = getNow();\r\n    const startRemindingTimeSpan = differenceInMilliseconds(\r\n      endOfHour(now),\r\n      now\r\n    );\r\n\r\n    setTimeout(() => {\r\n      setInterval(() => this.notify(), REMIND_TIME_INTERVAL);\r\n    }, startRemindingTimeSpan);\r\n  }\r\n\r\n  async notify(): Promise<void> {\r\n    const users = await this.userService.find();\r\n\r\n    for (const user of users) {\r\n      const now = startOfHalfOfHour(getNow());\r\n      const { nextDrinkTime, sleepTime, awakeTime, timeZone } = user;\r\n      const zonedAwakeTime = getZonedToUtcTime(awakeTime, timeZone);\r\n      const zonedSleepTime = getZonedToUtcTime(sleepTime, timeZone);\r\n\r\n      if (isEqual(now, zonedSleepTime)) {\r\n        await this.updateNextDrinkTime(user.id, addDays(zonedAwakeTime, 1));\r\n\r\n        continue;\r\n      }\r\n\r\n      if (isEqual(now, zonedAwakeTime) || isEqual(now, nextDrinkTime)) {\r\n        await this.notificationService.notify(user, REMIND_MESSAGE);\r\n      }\r\n    }\r\n  }\r\n\r\n  async calculateNextDrinkTime(userId: string): Promise<Date> {\r\n    const now = getNow();\r\n    const user = await this.userService.findById(userId);\r\n    const { awakeTime, timeZone } = user;\r\n    const dayStart = getZonedToUtcTime(0, timeZone);\r\n    const drunkDailyDoses = await this.hydrationService.find(userId, {\r\n      from: dayStart.toISOString()\r\n    });\r\n    const drunkDailyWaterAmount = drunkDailyDoses.reduce(\r\n      (sum, { volume }) => sum + volume,\r\n      0\r\n    );\r\n    const zonedAwakeTime = getZonedToUtcTime(awakeTime, timeZone);\r\n    const lastDrunkDoseTime =\r\n      drunkDailyDoses.length > 0 &&\r\n      drunkDailyDoses[drunkDailyDoses.length - 1].time;\r\n    const lastDrinkTime =\r\n      lastDrunkDoseTime && isAfter(lastDrunkDoseTime, zonedAwakeTime)\r\n        ? lastDrunkDoseTime\r\n        : zonedAwakeTime;\r\n    const remainingHours = calculateRemainingHours(user, now);\r\n    const remainingDrinks = calculateRemainingDrinks(drunkDailyWaterAmount);\r\n\r\n    if (isBefore(now, zonedAwakeTime)) {\r\n      return zonedAwakeTime;\r\n    }\r\n\r\n    if (remainingDrinks === 0) {\r\n      return addDays(zonedAwakeTime, 1);\r\n    }\r\n\r\n    const nextDrinkTime = calculateNextDrinkTime(\r\n      lastDrinkTime,\r\n      remainingHours,\r\n      remainingDrinks\r\n    );\r\n\r\n    console.log('user:', user.email);\r\n    console.log('drunkDailyDoses:', drunkDailyDoses);\r\n    console.log('drunkDailyWaterAmount:', drunkDailyWaterAmount);\r\n    console.log('lastDrinkTime:', lastDrinkTime);\r\n    console.log('remainingHours:', remainingHours);\r\n    console.log('remainingDrinks:', remainingDrinks);\r\n    console.log('nextDrinkTime:', nextDrinkTime);\r\n\r\n    if (isBefore(nextDrinkTime, now)) {\r\n      return endOfHalfOfHour(now);\r\n    }\r\n\r\n    return nextDrinkTime;\r\n  }\r\n\r\n  async updateNextDrinkTime(\r\n    userId: string,\r\n    nextDrinkTime: Date\r\n  ): Promise<void> {\r\n    await this.userService.update(userId, { nextDrinkTime });\r\n  }\r\n}\r\n","import { ConfigService } from './config.service';\r\nimport { Global, Module } from '@nestjs/common';\r\nimport * as path from 'path';\r\n\r\nconst paths = path.resolve(__dirname);\r\nconsole.log(paths);\r\n\r\n@Global()\r\n@Module({\r\n  providers: [ConfigService],\r\n  exports: [ConfigService]\r\n})\r\nexport class ConfigModule {}\r\n","export const environment = {\r\n  production: true\r\n};\r\n","module.exports = require(\"@nestjs/passport\");","import { UserDto } from '@water-reminder/api-interfaces';\r\nimport {\r\n  IsDateString,\r\n  IsNotEmpty,\r\n  IsNumber,\r\n  IsOptional,\r\n  IsString,\r\n  ValidateNested\r\n} from 'class-validator';\r\nimport { PushSubscription } from 'web-push';\r\n\r\nexport interface User extends UserDto {\r\n  readonly pushSubscriptions: Array<PushSubscription>;\r\n}\r\n\r\ntype PushSubscriptionKeys = PushSubscription['keys'];\r\n\r\nexport class PushSubscriptionKeysData implements PushSubscriptionKeys {\r\n  @IsNotEmpty()\r\n  p256dh: string;\r\n\r\n  @IsNotEmpty()\r\n  auth: string;\r\n}\r\n\r\nexport class PushSubscriptionData implements PushSubscription {\r\n  @IsNotEmpty()\r\n  endpoint: PushSubscription['endpoint'];\r\n\r\n  @ValidateNested()\r\n  keys: PushSubscriptionKeysData;\r\n}\r\n\r\nexport class UpdateUserData implements Partial<UserDto> {\r\n  @IsOptional()\r\n  @IsString()\r\n  email: string;\r\n\r\n  @IsOptional()\r\n  @IsString()\r\n  password: string;\r\n\r\n  @IsOptional()\r\n  @IsString()\r\n  firstName: string;\r\n\r\n  @IsOptional()\r\n  @IsString()\r\n  lastName: string;\r\n\r\n  @IsOptional()\r\n  @IsNumber()\r\n  awakeTime: number;\r\n\r\n  @IsOptional()\r\n  @IsNumber()\r\n  sleepTime: number;\r\n\r\n  @IsOptional()\r\n  @IsDateString()\r\n  nextDrinkTime: Date;\r\n\r\n  @IsOptional()\r\n  @IsString()\r\n  timeZone: string;\r\n}\r\n","import { UserDto, UserLoginDto, UserSignUpDto } from '@water-reminder/api-interfaces';\r\nimport { IsEmail, IsNotEmpty, MinLength, ValidateNested } from 'class-validator';\r\nimport { PushSubscription } from 'web-push';\r\n\r\nexport class UserSignInData implements UserLoginDto {\r\n  @IsEmail()\r\n  email: string;\r\n\r\n  @MinLength(8)\r\n  password: string;\r\n}\r\n\r\nexport class UserSignUpData extends UserSignInData implements UserSignUpDto {\r\n  @MinLength(3)\r\n  firstName: string;\r\n\r\n  @MinLength(3)\r\n  lastName: string;\r\n}\r\n","import { IsDateString, IsOptional } from 'class-validator';\r\n\r\nexport class TimeRange {\r\n  @IsDateString()\r\n  from?: string;\r\n\r\n  @IsOptional()\r\n  @IsDateString()\r\n  to?: string;\r\n}\r\n","module.exports = require(\"path\");","module.exports = require(\"bcryptjs\");","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { UserModule } from '../user/user.module';\r\nimport { DoseSchemaModel } from './dose.schema';\r\nimport { HydrationController } from './hydration-controller';\r\nimport { HydrationService } from './hydration.service';\r\n\r\n@Module({\r\n  imports: [MongooseModule.forFeature([DoseSchemaModel]), UserModule],\r\n  controllers: [HydrationController],\r\n  providers: [HydrationService],\r\n  exports: [HydrationService]\r\n})\r\nexport class HydrationModule {}\r\n","import { Module } from '@nestjs/common';\r\nimport { MongooseModule } from '@nestjs/mongoose';\r\nimport { NotificationController } from './notification.controller';\r\nimport { NotificationSchemaModel } from './notification.schema';\r\nimport { NotificationService } from './notification.service';\r\n\r\n@Module({\r\n  imports: [MongooseModule.forFeature([NotificationSchemaModel])],\r\n  controllers: [NotificationController],\r\n  providers: [NotificationService],\r\n  exports: [NotificationService]\r\n})\r\nexport class NotificationModule {}\r\n","import { CreateDoseDto, DoseDto, DoseVolume, OmitId } from '@water-reminder/api-interfaces';\r\nimport { IsDateString, IsInt } from 'class-validator';\r\n\r\nexport type CreateDose = OmitId<DoseDto>;\r\n\r\nexport class CreateDoseData implements CreateDoseDto {\r\n  @IsInt()\r\n  volume: DoseVolume;\r\n\r\n  @IsDateString()\r\n  time: string;\r\n}\r\n","import {\r\n  Auditable,\r\n  NOTIFICATION_STATUSES_COUNT,\r\n  NotificationDto\r\n} from '@water-reminder/api-interfaces';\r\nimport { IsNumber, Max, Min } from 'class-validator';\r\n\r\nexport type CreateNotification = Omit<NotificationDto, keyof Auditable>;\r\n\r\nexport class UpdateNotificationData implements Partial<NotificationDto> {\r\n  @IsNumber()\r\n  @Min(0)\r\n  @Max(NOTIFICATION_STATUSES_COUNT - 1)\r\n  status: number;\r\n}\r\n","import { DocumentQuery, Document } from 'mongoose';\r\n\r\n/**\r\n * Utility function to make async/await code more readable.\r\n * (inspired by await-to-js library)\r\n */\r\nexport async function catchPromiseError<T>(\r\n  promise: Promise<T> | DocumentQuery<T, Document>\r\n): Promise<[Error, undefined] | [undefined, T]> {\r\n  try {\r\n    return [undefined, await promise];\r\n  } catch (e) {\r\n    return [e, undefined];\r\n  }\r\n}\r\n\r\nexport function getTimeZone(): string {\r\n  return Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n}\r\n\r\nexport function getNow(): Date {\r\n  return new Date();\r\n}\r\n","export type OmitId<T extends BaseEntity> = Omit<T, '_id'>;\r\n\r\nexport interface BaseEntity {\r\n  readonly _id: string;\r\n}\r\n\r\nexport interface Auditable {\r\n  readonly createdAt: string | Date;\r\n  readonly updatedAt: string | Date;\r\n}\r\n\r\nexport interface UserDto extends BaseEntity {\r\n  readonly email: string;\r\n  readonly password?: string;\r\n  readonly firstName: string;\r\n  readonly lastName: string;\r\n  readonly imageUrl: string;\r\n  readonly provider: string;\r\n  readonly thirdPartyId: string;\r\n  readonly awakeTime: number;\r\n  readonly sleepTime: number;\r\n  readonly nextDrinkTime: Date;\r\n  readonly timeZone: string;\r\n}\r\n\r\nexport interface DailyHydrationStatisticsDto {\r\n  readonly date: Date | string;\r\n  readonly amount: number;\r\n}\r\n\r\nexport type UserLoginDto = Pick<UserDto, 'email' | 'password'>;\r\n\r\nexport type UserSignUpDto = Pick<\r\n  UserDto,\r\n  'email' | 'password' | 'firstName' | 'lastName'\r\n>;\r\n\r\nexport interface DoseDto extends BaseEntity {\r\n  readonly time: string | Date;\r\n  readonly volume: DoseVolume;\r\n  readonly userId: string;\r\n}\r\n\r\nexport interface NextDrinkTimeDto {\r\n  readonly nextDrinkTime: Date;\r\n}\r\n\r\nexport type CreateDoseDto = Omit<OmitId<DoseDto>, 'userId'>;\r\n\r\nexport enum NotificationStatus {\r\n  closed,\r\n  opened,\r\n  untouched\r\n}\r\n\r\nexport interface DrinkDoseMessage {\r\n  readonly type: 'drink-dose';\r\n}\r\n\r\nexport interface OpenNotificationMessage {\r\n  readonly type: 'open-notification';\r\n  readonly payload: {\r\n    readonly notificationId: string;\r\n  };\r\n}\r\n\r\nexport interface CloseNotificationMessage {\r\n  readonly type: 'close-notification';\r\n  readonly payload: {\r\n    readonly notificationId: string;\r\n  };\r\n}\r\n\r\nexport type ServiceWorkerMessage =\r\n  | DrinkDoseMessage\r\n  | OpenNotificationMessage\r\n  | CloseNotificationMessage;\r\n\r\nexport interface NotificationPayloadDto {\r\n  readonly message: string;\r\n  readonly notificationId: string;\r\n}\r\n\r\nexport const NOTIFICATION_STATUSES_COUNT =\r\n  Object.keys(NotificationStatus).length / 2;\r\n\r\nexport interface NotificationDto extends Auditable {\r\n  readonly userId: string;\r\n  readonly message: string;\r\n  readonly status: NotificationStatus;\r\n}\r\n\r\nexport interface ErrorResponse {\r\n  readonly statusCode: number;\r\n  readonly message: string;\r\n}\r\n\r\nexport enum DoseVolume {\r\n  cup = 200\r\n}\r\n\r\n/**\r\n * Public VAPID key for push notifications.\r\n */\r\nexport const vapidPublicKey =\r\n  'BO0o6h3SswzEA4tJ5VOn_GJQPy16gHmq5pRfawdpslYLd967NEpKhfnw65uQvo0rOoKGupkd2C86CEemNORY4WI';\r\n","import { ConfigModule } from './config/config.module';\r\nimport { ConfigService } from './config/config.service';\r\nimport { Module } from '@nestjs/common';\r\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { HydrationModule } from './hydration/hydration.module';\r\nimport { NotificationModule } from './notification/notification.module';\r\nimport { ReminderModule } from './reminder/reminder.module';\r\nimport { UserModule } from './user/user.module';\r\n\r\n@Module({\r\n  imports: [\r\n    AuthModule,\r\n    HydrationModule,\r\n    ReminderModule,\r\n    NotificationModule,\r\n    UserModule,\r\n    MongooseModule.forRootAsync({\r\n      imports: [ConfigModule],\r\n      useFactory: (configService: ConfigService): MongooseModuleOptions => {\r\n        console.log(\r\n          'mongoConnectionString',\r\n          configService.get('mongodbConnectionString')\r\n        );\r\n\r\n        console.log('env', configService.envConfig);\r\n\r\n        return {\r\n          uri: configService.get('mongodbConnectionString'),\r\n          useNewUrlParser: true,\r\n          useUnifiedTopology: true\r\n        };\r\n      },\r\n      inject: [ConfigService]\r\n    })\r\n  ]\r\n})\r\nexport class AppModule {}\r\n","import * as path from 'path';\r\n\r\nexport const rootPath = path.resolve(process.cwd());\r\n","module.exports = require(\"dotenv\");","module.exports = require(\"fs\");","import { ConfigModule } from '../config/config.module';\r\nimport { Module } from '@nestjs/common';\r\nimport { UserModule } from '../user/user.module';\r\nimport { AuthGoogleStrategy } from './auth-google-strategy';\r\nimport { AuthController } from './auth.controller';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Module({\r\n  imports: [ConfigModule, UserModule],\r\n  controllers: [AuthController],\r\n  providers: [AuthGoogleStrategy, AuthService]\r\n})\r\nexport class AuthModule {}\r\n","import { ConfigService } from '../config/config.service';\r\nimport {\r\n  BadRequestException,\r\n  Body,\r\n  Controller,\r\n  Get,\r\n  InternalServerErrorException,\r\n  Patch,\r\n  Req,\r\n  UseGuards\r\n} from '@nestjs/common';\r\nimport { UserDto } from '@water-reminder/api-interfaces';\r\nimport { catchPromiseError } from '@water-reminder/utils';\r\nimport { Request } from 'express';\r\nimport { decode } from 'jsonwebtoken';\r\nimport { AuthGuard } from '../auth/auth.guard';\r\nimport { JWTPayload } from '../auth/auth.model';\r\nimport { PushSubscriptionData, UpdateUserData } from './user.model';\r\nimport { UserService } from './user.service';\r\n\r\n@Controller('user')\r\nexport class UserController {\r\n  constructor(\r\n    private config: ConfigService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  @Get()\r\n  @UseGuards(AuthGuard)\r\n  async getUser(@Req() req: Request): Promise<UserDto> {\r\n    const { jwt } = req.cookies;\r\n    const { id } = decode(jwt) as JWTPayload;\r\n    const [getUserError, user] = await catchPromiseError(\r\n      this.userService.findById(id)\r\n    );\r\n\r\n    if (getUserError) {\r\n      throw new BadRequestException('User was not found');\r\n    }\r\n\r\n    return user;\r\n  }\r\n\r\n  @Patch()\r\n  @UseGuards(AuthGuard)\r\n  async update(\r\n    @Req() req: Request,\r\n    @Body() userData: UpdateUserData\r\n  ): Promise<UserDto> {\r\n    const { jwt } = req.cookies;\r\n    const { id } = decode(jwt) as JWTPayload;\r\n    const [updateUserError, user] = await catchPromiseError(\r\n      this.userService.update(id, userData)\r\n    );\r\n\r\n    if (updateUserError) {\r\n      throw new InternalServerErrorException(\r\n        'Error when updating user has occurred'\r\n      );\r\n    }\r\n\r\n    return user;\r\n  }\r\n\r\n  @Patch('update-push-subscription')\r\n  @UseGuards(AuthGuard)\r\n  async updatePushSubscription(\r\n    @Req() req: Request,\r\n    @Body() pushSubscription: PushSubscriptionData\r\n  ): Promise<UserDto> {\r\n    const { jwt } = req.cookies;\r\n    const { id } = decode(jwt) as JWTPayload;\r\n    const [updateUserError, user] = await catchPromiseError(\r\n      this.userService.updatePushSubscription(id, pushSubscription)\r\n    );\r\n\r\n    if (updateUserError) {\r\n      throw new InternalServerErrorException(\r\n        'Error when updating user has occurred'\r\n      );\r\n    }\r\n\r\n    return user;\r\n  }\r\n}\r\n","import { Secret, verify } from 'jsonwebtoken';\r\n\r\nexport const verifyJWT = (\r\n  token: string,\r\n  secretKey: Secret\r\n): Promise<boolean> => {\r\n  return new Promise(resolve => {\r\n    verify(token, secretKey, error => {\r\n      if (error) {\r\n        return resolve(false);\r\n      }\r\n      resolve(true);\r\n    });\r\n  });\r\n};\r\n","import { OmitId } from '@water-reminder/api-interfaces';\r\nimport { SchemaCollection } from '../shared/collections';\r\nimport { Document, Schema, SchemaDefinition, SchemaTypes } from 'mongoose';\r\nimport { User } from './user.model';\r\n\r\nconst userSchemaDefinition: Record<\r\n  keyof OmitId<User>,\r\n  SchemaDefinition['']\r\n> = {\r\n  email: {\r\n    type: SchemaTypes.String,\r\n    required: true\r\n  },\r\n  password: {\r\n    type: SchemaTypes.String,\r\n    required: false\r\n  },\r\n  firstName: {\r\n    type: SchemaTypes.String,\r\n    required: true\r\n  },\r\n  lastName: {\r\n    type: SchemaTypes.String,\r\n    required: false\r\n  },\r\n  imageUrl: {\r\n    type: SchemaTypes.String,\r\n    required: false\r\n  },\r\n  provider: {\r\n    type: SchemaTypes.String,\r\n    required: false\r\n  },\r\n  thirdPartyId: {\r\n    type: SchemaTypes.String,\r\n    required: false\r\n  },\r\n  pushSubscriptions: [\r\n    {\r\n      endpoint: {\r\n        type: SchemaTypes.String\r\n      },\r\n      keys: {\r\n        auth: {\r\n          type: SchemaTypes.String\r\n        },\r\n        p256dh: {\r\n          type: SchemaTypes.String\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  awakeTime: {\r\n    type: SchemaTypes.Number,\r\n    required: false\r\n  },\r\n  sleepTime: {\r\n    type: SchemaTypes.Number,\r\n    required: false\r\n  },\r\n  nextDrinkTime: {\r\n    type: SchemaTypes.Date,\r\n    required: false\r\n  },\r\n  timeZone: {\r\n    type: SchemaTypes.String,\r\n    required: false\r\n  }\r\n};\r\n\r\nexport type UserDocument = Readonly<Document> & User;\r\n\r\nexport const UserSchema = new Schema(userSchemaDefinition, {\r\n  versionKey: false\r\n});\r\n\r\nexport const UserSchemaModel = {\r\n  name: SchemaCollection.User,\r\n  schema: UserSchema\r\n};\r\n","import { GoogleAuthUserPayload, SocialProvider } from './auth.model';\r\nimport { AuthService } from './auth.service';\r\nimport { UserService } from '../user/user.service';\r\nimport { ConfigService } from '../config/config.service';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { PassportStrategy } from '@nestjs/passport';\r\nimport { catchPromiseError } from '@water-reminder/utils';\r\nimport { Request } from 'express';\r\nimport { Profile, Strategy } from 'passport-google-oauth20';\r\n\r\n@Injectable()\r\nexport class AuthGoogleStrategy extends PassportStrategy(Strategy, 'google') {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private config: ConfigService,\r\n  ) {\r\n    super({\r\n      clientID: config.get('googleClientId'),\r\n      clientSecret: config.get('googleClientSecret'),\r\n      callbackURL: `${config.get('clientHost')}/api/auth/login/google/callback`,\r\n      passReqToCallback: true,\r\n      scope: ['profile', 'email']\r\n    });\r\n  }\r\n\r\n  async validate(\r\n    request: Request,\r\n    accessToken: string,\r\n    refreshToken: string,\r\n    profile: Profile,\r\n    done: (error: Error, result: GoogleAuthUserPayload) => void\r\n  ): Promise<void> {\r\n    const [error, user] = await catchPromiseError(\r\n      this.userService.findOrCreate(profile, SocialProvider.google)\r\n    );\r\n\r\n    if (error) {\r\n      return done(error, null);\r\n    }\r\n\r\n    done(null, { id: user.id });\r\n  }\r\n}\r\n","module.exports = require(\"passport-google-oauth20\");","import { ConfigService } from '../config/config.service';\r\nimport {\r\n  BadRequestException,\r\n  Body,\r\n  Controller,\r\n  Get,\r\n  InternalServerErrorException,\r\n  Post,\r\n  Req,\r\n  Res,\r\n  UseGuards\r\n} from '@nestjs/common';\r\nimport { AuthGuard as PassportAuthGuard } from '@nestjs/passport';\r\nimport { catchPromiseError } from '@water-reminder/utils';\r\nimport { compare } from 'bcryptjs';\r\nimport { Request, Response } from 'express';\r\nimport { UserService } from '../user/user.service';\r\nimport { UserSignInData, UserSignUpData } from './auth-validate.model';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Controller('auth')\r\nexport class AuthController {\r\n  constructor(\r\n    private config: ConfigService,\r\n    private userService: UserService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  @Post('sign-up')\r\n  async signUp(\r\n    @Res() response: Response,\r\n    @Body() userSignUpData: UserSignUpData\r\n  ): Promise<Response> {\r\n    const [getUserError, existingUser] = await catchPromiseError(\r\n      this.userService.findByEmail(userSignUpData.email)\r\n    );\r\n\r\n    if (getUserError) {\r\n      throw new InternalServerErrorException(\r\n        'Error when fetching user has occurred'\r\n      );\r\n    }\r\n\r\n    if (existingUser) {\r\n      throw new BadRequestException('User already exists');\r\n    }\r\n\r\n    const [createUserError, user] = await catchPromiseError(\r\n      this.userService.create(userSignUpData)\r\n    );\r\n\r\n    if (createUserError) {\r\n      throw new InternalServerErrorException(\r\n        'Error when creating user has occurred'\r\n      );\r\n    }\r\n\r\n    await this.authService.setAuthorizationCookie(response, { id: user._id });\r\n\r\n    return response.json(user);\r\n  }\r\n\r\n  @Post('login')\r\n  async login(\r\n    @Res() response: Response,\r\n    @Body() { email, password }: UserSignInData\r\n  ): Promise<Response> {\r\n    const [getUserError, user] = await catchPromiseError(\r\n      this.userService.findByEmail(email)\r\n    );\r\n\r\n    if (getUserError) {\r\n      throw new InternalServerErrorException(\r\n        'Error when finding user has occurred'\r\n      );\r\n    }\r\n\r\n    if (!user) {\r\n      throw new BadRequestException('User was not found');\r\n    }\r\n\r\n    const passwordIsValid = await compare(password, user.password || '');\r\n\r\n    if (!passwordIsValid) {\r\n      throw new BadRequestException('Password is not valid');\r\n    }\r\n\r\n    await this.authService.setAuthorizationCookie(response, { id: user._id });\r\n\r\n    return response.json(user);\r\n  }\r\n\r\n  /**\r\n   * Initiate Google OAuth2 login flow\r\n   */\r\n  @Get('login/google')\r\n  @UseGuards(PassportAuthGuard('google'))\r\n  googleLogin(): void {}\r\n\r\n  /**\r\n   * Handle Google authentication callback\r\n   */\r\n  @Get('login/google/callback')\r\n  @UseGuards(PassportAuthGuard('google'))\r\n  async googleLoginCallback(\r\n    @Req() { user: { id } }: Request,\r\n    @Res() response: Response\r\n  ): Promise<void> {\r\n    if (id) {\r\n      await this.authService.setAuthorizationCookie(response, { id });\r\n      response.redirect(`${this.config.get('clientHost')}`);\r\n    } else {\r\n      response.redirect(`${this.config.get('clientHost')}/login/failed`);\r\n    }\r\n  }\r\n\r\n  @Post('logout')\r\n  logout(@Res() response: Response): void {\r\n    this.authService.clearAuthorizationCookie(response);\r\n    response.json({ message: 'Successfully logged out' });\r\n  }\r\n}\r\n","import { SchemaCollection } from '../shared/collections';\r\nimport { DoseDto, OmitId } from '@water-reminder/api-interfaces';\r\nimport { Document, Schema, SchemaDefinition, SchemaTypes } from 'mongoose';\r\n\r\ntype DoseSchemaDefinitionKeys = keyof OmitId<DoseDto>;\r\n\r\nconst doseSchemaDefinition: Record<DoseSchemaDefinitionKeys, SchemaDefinition['']> = {\r\n  time: {\r\n    type: SchemaTypes.Date,\r\n    required: true\r\n  },\r\n  volume: {\r\n    type: SchemaTypes.Number,\r\n    required: true\r\n  },\r\n  userId: {\r\n    type: SchemaTypes.ObjectId,\r\n    ref: SchemaCollection.User\r\n  }\r\n};\r\n\r\nexport type DoseDocument = Readonly<Document> & DoseDto & {\r\n  readonly time: Date;\r\n};\r\n\r\nexport const DoseSchema = new Schema(doseSchemaDefinition, {\r\n  versionKey: false\r\n});\r\n\r\nexport const DoseSchemaModel = {\r\n  name: SchemaCollection.Dose,\r\n  schema: DoseSchema\r\n};\r\n","import {\r\n  Body,\r\n  ConflictException,\r\n  Controller,\r\n  Delete,\r\n  Get,\r\n  InternalServerErrorException,\r\n  Param,\r\n  Post,\r\n  Query,\r\n  Req,\r\n  UseGuards\r\n} from '@nestjs/common';\r\nimport { DailyHydrationStatisticsDto, DoseDto } from '@water-reminder/api-interfaces';\r\nimport { catchPromiseError } from '@water-reminder/utils';\r\nimport { Request } from 'express';\r\nimport { decode } from 'jsonwebtoken';\r\nimport { AuthGuard } from '../auth/auth.guard';\r\nimport { JWTPayload } from '../auth/auth.model';\r\nimport { ConfigService } from '../config/config.service';\r\nimport { CreateDoseData } from './dose.model';\r\nimport { HydrationService } from './hydration.service';\r\nimport { TimeRange } from './time-range.model';\r\n\r\n@Controller('hydration')\r\n@UseGuards(AuthGuard)\r\nexport class HydrationController {\r\n  constructor(\r\n    private config: ConfigService,\r\n    private hydrationService: HydrationService\r\n  ) {}\r\n\r\n  @Get('doses')\r\n  async getDoses(\r\n    @Req() req: Request,\r\n    @Query() timeRange: TimeRange\r\n  ): Promise<Array<DoseDto>> {\r\n    const { jwt } = req.cookies;\r\n    const { id } = decode(jwt) as JWTPayload;\r\n    const [getDosesError, doses] = await catchPromiseError(\r\n      this.hydrationService.find(id, timeRange)\r\n    );\r\n\r\n    if (getDosesError) {\r\n      throw new ConflictException();\r\n    }\r\n\r\n    return doses;\r\n  }\r\n\r\n  @Get('statistics')\r\n  async getStatistics(\r\n    @Req() req: Request,\r\n    @Query() timeRange: TimeRange\r\n  ): Promise<Array<DailyHydrationStatisticsDto>> {\r\n    const { jwt } = req.cookies;\r\n    const { id } = decode(jwt) as JWTPayload;\r\n    const [error, statistics] = await catchPromiseError(\r\n      this.hydrationService.getStatistics(id, timeRange)\r\n    );\r\n\r\n    if (error) {\r\n      throw new ConflictException();\r\n    }\r\n\r\n    return statistics;\r\n  }\r\n\r\n  @Post('doses')\r\n  async createDose(\r\n    @Req() req: Request,\r\n    @Body() { volume, time }: CreateDoseData\r\n  ): Promise<DoseDto> {\r\n    const { jwt } = req.cookies;\r\n    const { id } = decode(jwt) as JWTPayload;\r\n    const [createDoseError, dose] = await catchPromiseError(\r\n      this.hydrationService.createDose({ userId: id, volume, time })\r\n    );\r\n\r\n    if (createDoseError) {\r\n      throw new InternalServerErrorException();\r\n    }\r\n\r\n    return dose;\r\n  }\r\n\r\n  @Delete('doses/:id')\r\n  async deleteDose(\r\n    @Req() req: Request,\r\n    @Param('id') doseId: string\r\n  ): Promise<void> {\r\n    const [deleteDoseError] = await catchPromiseError(\r\n      this.hydrationService.deleteDose(doseId)\r\n    );\r\n\r\n    if (deleteDoseError) {\r\n      throw new ConflictException();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Body,\r\n  Controller,\r\n  InternalServerErrorException,\r\n  Param,\r\n  Patch,\r\n  UseGuards\r\n} from '@nestjs/common';\r\nimport { catchPromiseError } from '@water-reminder/utils';\r\nimport { AuthGuard } from '../auth/auth.guard';\r\nimport { ConfigService } from '../config/config.service';\r\nimport { UpdateNotificationData } from './notification.model';\r\nimport { NotificationDocument } from './notification.schema';\r\nimport { NotificationService } from './notification.service';\r\n\r\n@Controller('notification')\r\nexport class NotificationController {\r\n  constructor(\r\n    private config: ConfigService,\r\n    private notificationService: NotificationService\r\n  ) {}\r\n\r\n  @Patch('/:id')\r\n  @UseGuards(AuthGuard)\r\n  async update(\r\n    @Param('id') id: string,\r\n    @Body() notificationData: UpdateNotificationData\r\n  ): Promise<NotificationDocument> {\r\n    const [updateNotificationError, notification] = await catchPromiseError(\r\n      this.notificationService.update(id, notificationData)\r\n    );\r\n\r\n    if (updateNotificationError) {\r\n      throw new InternalServerErrorException(\r\n        'Error when updating notification has occurred'\r\n      );\r\n    }\r\n\r\n    return notification;\r\n  }\r\n}\r\n","module.exports = require(\"web-push\");","import { Auditable, NotificationDto } from '@water-reminder/api-interfaces';\r\nimport { Document, Schema, SchemaDefinition, SchemaTypes } from 'mongoose';\r\nimport { SchemaCollection } from '../shared/collections';\r\n\r\ntype NotificationDefinitionKeys = keyof Omit<NotificationDto, keyof Auditable>;\r\n\r\nconst notificationSchemaDefinition: Record<\r\n  NotificationDefinitionKeys,\r\n  SchemaDefinition['']\r\n> = {\r\n  message: {\r\n    type: SchemaTypes.String,\r\n    required: true\r\n  },\r\n  status: {\r\n    type: SchemaTypes.Number,\r\n    required: true\r\n  },\r\n  userId: {\r\n    type: SchemaTypes.ObjectId,\r\n    ref: SchemaCollection.User\r\n  }\r\n};\r\n\r\nexport type NotificationDocument = Readonly<Document> &\r\n  NotificationDto;\r\n\r\nexport const NotificationSchema = new Schema(notificationSchemaDefinition, {\r\n  versionKey: false,\r\n  timestamps: true\r\n});\r\n\r\nexport const NotificationSchemaModel = {\r\n  name: SchemaCollection.Notification,\r\n  schema: NotificationSchema\r\n};\r\n","import { Module } from '@nestjs/common';\r\nimport { HydrationModule } from '../hydration/hydration.module';\r\nimport { NotificationModule } from '../notification/notification.module';\r\nimport { UserModule } from '../user/user.module';\r\nimport { ReminderController } from './reminder-controller';\r\nimport { ReminderService } from './reminder.service';\r\n\r\n@Module({\r\n  imports: [UserModule, HydrationModule, NotificationModule],\r\n  providers: [ReminderService],\r\n  controllers: [ReminderController]\r\n})\r\nexport class ReminderModule {}\r\n","import { Controller, InternalServerErrorException, Patch, Req, UseGuards } from '@nestjs/common';\r\nimport { NextDrinkTimeDto } from '@water-reminder/api-interfaces';\r\nimport { catchPromiseError } from '@water-reminder/utils';\r\nimport { Request } from 'express';\r\nimport { decode } from 'jsonwebtoken';\r\nimport { AuthGuard } from '../auth/auth.guard';\r\nimport { JWTPayload } from '../auth/auth.model';\r\nimport { ConfigService } from '../config/config.service';\r\nimport { ReminderService } from './reminder.service';\r\n\r\n@Controller('reminder')\r\n@UseGuards(AuthGuard)\r\nexport class ReminderController {\r\n  constructor(\r\n    private config: ConfigService,\r\n    private reminderService: ReminderService\r\n  ) {}\r\n\r\n  @Patch('/next-drink-time')\r\n  async updateNextDrinkTime(\r\n    @Req() req: Request\r\n  ): Promise<NextDrinkTimeDto> {\r\n    const { jwt } = req.cookies;\r\n    const { id } = decode(jwt) as JWTPayload;\r\n    const nextDrinkTime = await this.reminderService.calculateNextDrinkTime(id);\r\n    const [error] = await catchPromiseError(\r\n      this.reminderService.updateNextDrinkTime(id, nextDrinkTime)\r\n    );\r\n\r\n    if (error) {\r\n      throw new InternalServerErrorException(\r\n        'Error when updating next drink time has occurred'\r\n      );\r\n    }\r\n\r\n    return { nextDrinkTime };\r\n  }\r\n}\r\n","module.exports = require(\"@nestjs/core\");","module.exports = require(\"cookie-parser\");","import { AppModule } from './modules/app.module';\r\nimport { environment } from '@api/environments/environment';\r\nimport { ValidationPipe } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\nimport * as cookieParser from 'cookie-parser';\r\nimport { ReminderService } from './modules/reminder/reminder.service';\r\n\r\nasync function bootstrap(): Promise<void> {\r\n  const globalPrefix = 'api';\r\n  const port = process.env.apiPort || environment.apiPort;\r\n\r\n  console.log('!!! port !!!', port);\r\n  console.log('!!! environment !!!', environment);\r\n  console.log('!!! process.env !!!', process.env);\r\n\r\n  const app = await NestFactory.create(AppModule, { cors: true });\r\n  const reminderService = app.get(ReminderService);\r\n\r\n  reminderService.runReminder();\r\n  app.use(cookieParser());\r\n  app.useGlobalPipes(new ValidationPipe());\r\n  app.setGlobalPrefix(globalPrefix);\r\n  await app.listen(port);\r\n}\r\n\r\nbootstrap();\r\n"],"sourceRoot":""}